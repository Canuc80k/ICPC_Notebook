struct SparseTable {
    vector<ll> a;
    vector<vector<ll>> table;
    ll merge(ll a, ll b) {return min(a, b);}
    void buildTable(ll *arr, ll n) {
        table.resize(n + 1, vector<ll>(__lg(n + 1) + 1, 0));
        a.resize(n + 1, 0);

        FOR (i, 1, n) a[i] = arr[i], table[i][0] = a[i];
        FOR (j, 1, __lg(n))
            for (ll i = 1; i + (1 << j) - 1 <= n; i ++)
                table[i][j] = merge(table[i][j - 1], table[i + (1 << (j - 1))][j - 1]);
    }
    ll get(ll l, ll r) {
        ll k = __lg(r - l + 1);
        return merge(table[l][k], table[r - (1 << k) + 1][k]);    
    }
};