struct FenwickTree2D {
    vector<vector<array<ll, 4>>> s; ll n, m;
    FenwickTree2D(ll n, ll m): n(n), m(m), s(n + 10, vector<array<ll, 4>>(m + 10, {0, 0 ,0, 0})) {}

    void update(ll x, ll y, ll w) {
        for (int i = x; i <= n; i += i & (-i)) {
            for (int j = y; j <= m; j += j & (-j)) {
                s[i][j][0] += w;
                s[i][j][1] += x * w;
                s[i][j][2] += y * w;
                s[i][j][3] += x * y * w;
            }
        }
    }

    void update(ll x, ll y, ll u, ll v, ll w) {
        update(x, y, w);
        update(x, v + 1, -w);
        update(u + 1, y, -w);
        update(u + 1, v + 1, w);
    }

    ll get(ll x, ll y) {
        ll res = 0;
        for (int i = x; i > 0; i -= i & (-i))
            for (int j = y; j > 0; j -= j & (-j))
                res += (x + 1) * (y + 1) * s[i][j][0] - (y + 1) * s[i][j][1] - (x + 1) * s[i][j][2] + s[i][j][3];
        return res;
    }

    ll get(ll x01, ll y01, ll x02, ll y02) {
        return get(x02, y02) - get(x01 - 1, y02) - get(x02, y01 - 1) + get(x01 - 1, y01 - 1);   
    }
};